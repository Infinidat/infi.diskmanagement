[buildout]
include-site-packages = false
relative-paths = true
unzip = true
newest = false
download-cache = .cache
develop = .
parts = 

[project]
name = infi.diskmanagement
homepage = https://github.com/Infinidat/${project:name}
namespace_packages = ['infi']
install_requires = ['capacity',
	'infi.cwrap',
	'infi.devicemanager',
	'infi.instruct',
	'infi.pyutils',
	'infi.wioctl>=0.1.3',
	'infi.wmi',
	'setuptools',
	'waiting']
version_file = src/infi/diskmanagement/__version__.py
description = Windows Disk Management wrapping in Python
long_description = This module gives the same functionality as diskpart. But unlike diskpart, it does not use VDS, it uses SetupAPI and direct IOCTLs to the disks, volumes, and the mount and partitions managers
console_scripts = []
gui_scripts = []
package_data = []
upgrade_code = None
product_name = ${project:name}
post_install_script_name = None
pre_uninstall_script_name = None

[isolated-python]
recipe = infi.recipe.python
version = v2.7.8.11

[setup.py]
recipe = infi.recipe.template.version
input = setup.in
output = setup.py

[__version__.py]
recipe = infi.recipe.template.version
output = ${project:version_file}

[development-scripts]
dependent-scripts = true
recipe = infi.recipe.console_scripts
eggs = infi.traceback
	${project:name}
	coverage
	ipython
	pylint
	mock
	nose
interpreter = python

[pack]
recipe = infi.recipe.application_packager
company = None

[sublime]
recipe = corneti.recipes.codeintel
eggs = ${development-scripts:eggs}

